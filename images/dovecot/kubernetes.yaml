---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - { port: $PORT_DOVECOT_SMTP, targetPort: 25, name: smtp }
  - { port: $PORT_DOVECOT_IMAPD, targetPort: 143, name: imapd }
  - { port: $PORT_DOVECOT_IMAPS, targetPort: 993, name: imaps }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        image: $REGISTRY_URI/$SERVICE_NAME:latest
        ports:
        - containerPort: 25
        - containerPort: 143
        - containerPort: 993
        volumeMounts:
        - mountPath: /etc/dovecot/conf.local
          name: admin
          readOnly: true
          subPath: services/$SERVICE_NAME/etc
        - mountPath: /etc/postfix/postfix.d
          name: admin
          readOnly: true
          subPath: services/$SERVICE_NAME/postfix/etc
        - mountPath: /var/spool/mail
          name: inbox
        - mountPath: /var/spool/postfix
          name: spool
        - mountPath: /home
          name: webmail
        - mountPath: /run/secrets/ldap-ro-password
          name: ldap-ro-password
          readOnly: true
          subPath: ldap-ro-password
        - mountPath: /run/secrets/postfix-sasl-passwd
          name: postfix-sasl-passwd
          readOnly: true
          subPath: postfix-sasl-passwd
        - mountPath: /etc/ssl/certs/smtpd-cert.pem
          name: ssl-cert
          readOnly: true
          subPath: tls.crt
        - mountPath: /run/secrets/smtpd-key.pem
          name: ssl-cert
          readOnly: true
          subPath: tls.key
      dnsConfig:
        nameservers: [ $DNS_SERVERS ]
        options:
        - name: use-vc
        - name: ndots
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      nodeSelector:
        service.$SERVICE_NAME: allow
      volumes:
      - name: admin
        hostPath: { path: $PATH_ADM }
      - name: inbox
        hostPath: { path: $K8S_VOLUMES_PATH/inbox }
      - name: spool
        hostPath: { path: $K8S_VOLUMES_PATH/postfix_spool }
      - name: webmail
        hostPath: { path: $K8S_VOLUMES_PATH/webmail }
      - name: ldap-ro-password
        secret:
          secretName: ldap-ro-password
      - name: postfix-sasl-passwd
        secret:
          secretName: postfix-sasl-passwd
      - name: ssl-cert
        secret:
          secretName: $POSTFIX_TLS_SECRET
---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME-sync
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-sync
spec:
  clusterIP: None
  ports:
  - { port: 22, targetPort: 22 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME-sync
    release: "0.1"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-sync
    release: "0.1"
  name: $SERVICE_NAME-sync
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME-sync
      release: "0.1"
  serviceName: $SERVICE_NAME-sync
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME-sync
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME-sync
        env:
        - name: PUBKEY1
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey1
        - name: PUBKEY2
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey2
        - { name: SYNC_INTERVAL, value: "2" }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_URI/data-sync:latest
        ports:
        - containerPort: 22
        resources:
          limits:
            memory: 1536Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: archive
          mountPath: /root/.unison
        - name: config
          mountPath: /etc/unison.d/common.prf
          readOnly: true
          subPath: common.prf
        - mountPath: /etc/ssh
          name: etc
        - mountPath: /var/log/unison
          name: logs
        - mountPath: /var/data-sync/inbox
          name: inbox
        - mountPath: /var/data-sync/webmail
          name: webmail
        - mountPath: /run/secrets/data-sync-sshkey1
          name: sshkeys
          readOnly: true
          subPath: sshkey1
        - mountPath: /run/secrets/data-sync-sshkey2
          name: sshkeys
          readOnly: true
          subPath: sshkey2
      dnsConfig:
        options:
        - { name: ndots }
      imagePullSecrets:
      - name: regcred
      nodeSelector:
        service.data-sync: allow
      volumes:
      - name: config
        configMap:
          name: data-sync
      - name: sshkeys
        secret:
          secretName: $DATA_SYNC_SECRET
      - name: logs
        hostPath: { path: $K8S_VOLUMES_PATH/sync-logs/$SERVICE_NAME }
  volumeClaimTemplates:
  - metadata:
      name: archive
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: etc
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: inbox
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: inbox
  - metadata:
      name: webmail
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: webmail
