---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - { port: 22, targetPort: 22 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
  name: $SERVICE_NAME
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
      release: "0.1"
  serviceName: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: SYNC_INTERVAL, value: "2" }
        - { name: TZ, value: $TZ }
        - name: SYNC_SSHKEY
          valueFrom:
            configMapKeyRef:
              name: $SERVICE_NAME
              key: sync-sshkey
        image: $REGISTRY_URI/$SERVICE_NAME:latest
        ports:
        - containerPort: 22
        volumeMounts:
        - name: archive
          mountPath: /root/.unison
        - name: admin
          mountPath: /etc/unison.d
          readOnly: true
          subPath: services/$SERVICE_NAME
        - mountPath: /etc/ssh
          name: etc
        - mountPath: /var/log/unison
          name: logs
        - mountPath: /var/data-sync/share
          name: share
        - mountPath: /var/data-sync/cloud
          name: cloud
        - mountPath: /var/data-sync/dos
          name: dos
        - mountPath: /var/data-sync/duplicati
          name: duplicati
        - mountPath: /var/data-sync/gitlab
          name: gitlab
        - mountPath: /var/data-sync/household
          name: household
        - mountPath: /var/data-sync/inbox
          name: inbox
        - mountPath: /var/data-sync/jira
          name: jira
        - mountPath: /var/data-sync/nexus
          name: nexus
        - mountPath: /var/data-sync/user
          name: user
        - mountPath: /var/data-sync/webmail
          name: webmail
        - mountPath: /var/data-sync/wx
          name: wx
        - mountPath: /run/secrets/data-sync-sshkey
          name: data-sync-sshkey
          readOnly: true
          subPath: data-sync
      dnsConfig:
        options:
        - { name: ndots }
      imagePullSecrets:
      - name: regcred
      nodeSelector:
        service.$SERVICE_NAME: allow
      volumes:
      - name: admin
        hostPath: { path: $PATH_ADM }
      - name: data-sync-sshkey
        secret:
          secretName: data-sync-sshkey
      - name: logs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: archive
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: etc
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: share
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: share
  - metadata:
      name: cloud
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: cloud
  - metadata:
      name: dos
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: dos
  - metadata:
      name: duplicati
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: duplicati
  - metadata:
      name: gitlab
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: gitlab
  - metadata:
      name: household
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: household
  - metadata:
      name: inbox
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: inbox
  - metadata:
      name: jira
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: jira
  - metadata:
      name: nexus
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: nexus
  - metadata:
      name: user
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: user
  - metadata:
      name: webmail
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: webmail
  - metadata:
      name: wx
    spec:
      accessModes: [ ReadWriteMany ]
      resources:
        requests:
          storage: 8Gi
      selector:
        matchLabels:
          volume.group: wx
