---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
spec:
  clusterIP: $BLACKLIST_IP
  ports:
  - { port: 53, protocol: UDP, targetPort: 53 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
  name: $SERVICE_NAME
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
      release: "0.1"
  serviceName: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: DB_HOST, value: $DB_HOST }
        - { name: NS_SERVERS, value: $RBLDNS_SERVERS }
        - { name: RBL_DOMAIN, value: $RBL_DOMAIN }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_URI/$SERVICE_NAME:latest
        ports:
        - containerPort: 53
          protocol: UDP
        volumeMounts:
        - mountPath: /var/lib/rbldns
          name: data
        - name: mysql-blacklist-user
          mountPath: /run/secrets/mysql-blacklist-user
          readOnly: true
          subPath: mysql-blacklist-user
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      volumes:
      - name: mysql-blacklist-user
        secret:
          secretName: mysql-blacklist-user
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
