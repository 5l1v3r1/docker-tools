---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - port: 80
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: TZ, value: $TZ }
        image: nextcloud:$VERSION_NEXTCLOUD
        command: [/bin/bash]
        args:
        - -c
        - >
          set -x &&
          usermod -a -G users www-data &&
          mkdir -p /var/www/html/data/$CLOUD_USER1/files \
            /var/www/html/data/$CLOUD_USER2/files &&
          ln -fsT /pictures/DigitalPics/iPhone-sync/$CLOUD_USER1 \
            /var/www/html/data/$CLOUD_USER1/files/Photos &&
          ln -fsT /pictures/DigitalPics/iPhone-sync/$CLOUD_USER2 \
            /var/www/html/data/$CLOUD_USER2/files/Photos &&
          exec apache2-foreground
        volumeMounts:
        - mountPath: /var/www/html
          name: synced
          subPath: html
        - mountPath: /pictures
          name: pictures
      dnsConfig:
        nameservers: [ $DNS_SERVERS ]
        options:
        - name: use-vc
        - name: ndots
      nodeSelector:
        service.data-sync: allow
      volumes:
      - name: synced
        hostPath: { path: $K8S_VOLUMES_PATH/$SERVICE_NAME }
      - name: pictures
        persistentVolumeClaim:
          claimName: pictures
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $SERVICE_NAME-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - secretName: $SERVICE_NAME.$DOMAIN
    hosts:
    - $SERVICE_NAME.$DOMAIN
  rules:
  - host: $SERVICE_NAME.$DOMAIN
    http:
      paths:
      - path: /
        backend:
          serviceName: $SERVICE_NAME
          servicePort: 80
