---
apiVersion: v1
kind: Namespace
metadata:
  name: gitlab
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-pod-privileged
  namespace: $K8S_NAMESPACE
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner-dockersock
  namespace: gitlab
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab:gitlab-runner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dockersock
subjects:
- kind: ServiceAccount
  name: gitlab-runner-dockersock
  namespace: gitlab
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-pod
rules:
- apiGroups: [""]
  resources:
  - nodes
  - pods
  verbs: [list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-pod-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-pod
subjects:
- kind: ServiceAccount
  name: gitlab-pod-privileged
  namespace: $K8S_NAMESPACE
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
  name: dockersock
spec:
  allowedCapabilities: []
  allowedHostPaths:
  - pathPrefix: /var/run/docker.sock
  allowPrivilegeEscalation: false
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - hostPath
  - persistentVolumeClaim
  - projected
  - secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dockersock
rules:
- apiGroups: [ policy ]
  resourceNames: [ dockersock ]
  resources: [ podsecuritypolicies ]
  verbs: [ use ]
