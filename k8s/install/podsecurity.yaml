---
# Adapted from https://pmcgrath.net/using-pod-security-policies-with-kubeadm
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
    apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
  name: default
spec:
  allowedCapabilities: []
  # TODO: turn off hostPath mounts, use NFS instead
  # TODO: parameterize better
  allowedHostPaths:
  - pathPrefix: $PATH_ADM
    readOnly: true
  - pathPrefix: $PATH_BKP
  - pathPrefix: $PATH_SHR
  - pathPrefix: $K8S_VOLUMES_PATH/cloud
  - pathPrefix: $K8S_VOLUMES_PATH/dos
  - pathPrefix: $K8S_VOLUMES_PATH/duplicati
  - pathPrefix: $K8S_VOLUMES_PATH/gitlab
  - pathPrefix: $K8S_VOLUMES_PATH/household
  - pathPrefix: $K8S_VOLUMES_PATH/inbox
  - pathPrefix: $K8S_VOLUMES_PATH/jira
  - pathPrefix: $K8S_VOLUMES_PATH/nexus
  - pathPrefix: $K8S_VOLUMES_PATH/user
  - pathPrefix: $K8S_VOLUMES_PATH/webmail
  - pathPrefix: $K8S_VOLUMES_PATH/wx
  allowPrivilegeEscalation: false
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsNonRoot
  supplementalGroups:
    rule: RunAsNonRoot
    ranges:
      - min: 1
        max: 65535
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - hostPath
  - persistentVolumeClaim
  - projected
  - secret
  hostNetwork: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: restricted-psp
rules:
- apiGroups: [ policy ]
  resourceNames: [ default ]
  resources: [ podsecuritypolicies ]
  verbs: [ use ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: restricted-psp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: restricted-psp
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
  name: privileged
spec:
  allowedCapabilities: [ '*' ]
  allowPrivilegeEscalation: true
  fsGroup:
    rule: RunAsAny
  hostIPC: true
  hostNetwork: true
  hostPID: true
  hostPorts:
  - min: 0
    max: 65535
  privileged: true
  readOnlyRootFilesystem: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes: [ '*' ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: privileged-psp
rules:
- apiGroups: [ policy ]
  resourceNames: [ privileged ]
  resources: [ podsecuritypolicies ]
  verbs: [ use ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-system-psp
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: privileged-psp
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:nodes
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:kube-system
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
  name: approved
spec:
  allowedCapabilities: [ NET_ADMIN ]
  # TODO: turn off hostPath mounts, use NFS instead
  allowedHostPaths:
  - pathPrefix: /etc/kubernetes/pki/etcd
    readOnly: true
  - pathPrefix: /var/backup/k8s
  - pathPrefix: $PATH_ADM
    readOnly: true
  - pathPrefix: $PATH_BKP
  - pathPrefix: $PATH_SHR
  - pathPrefix: $K8S_VOLUMES_PATH/dos
  - pathPrefix: $K8S_VOLUMES_PATH/household
  allowPrivilegeEscalation: false
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  hostIPC: false
  hostNetwork: true
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsNonRoot
  supplementalGroups:
    rule: RunAsNonRoot
    ranges:
      - min: 1
        max: 65535
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - hostPath
  - persistentVolumeClaim
  - projected
  - secret
  hostNetwork: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: approved-psp
rules:
- apiGroups: [ policy ]
  resourceNames: [ approved ]
  resources: [ podsecuritypolicies ]
  verbs: [ use ]
